set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
Plugin 'leafgarland/typescript-vim'

" JavaScript eslint
Plugin 'w0rp/ale'"
" NERDTree (file browser)
Plugin 'scrooloose/nerdtree'

" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"
"
"
" ""
" "" Janus setup
" ""
" 
" " Define paths
" if has('win32') || has('win64') || has('win32unix')
"   let g:janus_path = escape(expand("~/.vim/janus/vim"), ' ')
"   let g:janus_vim_path = escape(expand("~/.vim/janus/vim"), ' ')
" else
"   let g:janus_path = escape(fnamemodify(resolve(expand("<sfile>:p")), ":h"), ' ')
"   let g:janus_vim_path = escape(fnamemodify(resolve(expand("<sfile>:p" . "vim")), ":h"), ' ')
" endif
" let g:janus_custom_path = expand("~/.janus")
" 
" " Source janus's core
" exe 'source ' . g:janus_vim_path . '/core/before/plugin/janus.vim'
" 
" " You should note that groups will be processed by Pathogen in reverse
" " order they were added.
" call janus#add_group("tools")
" call janus#add_group("langs")
" call janus#add_group("colors")
" 
" ""
" "" Customisations
" ""
" 
" if filereadable(expand("~/.vimrc.before"))
"   source ~/.vimrc.before
" endif
" 
" 
" " Disable plugins prior to loading pathogen
" exe 'source ' . g:janus_vim_path . '/core/plugins.vim'
" 
" ""
" "" Pathogen setup
" ""
" 
" " Load all groups, custom dir, and janus core
" call janus#load_pathogen()
" 
" " .vimrc.after is loaded after the plugins have loaded
"
"
"
"
"
"

syntax enable
set autoindent
set smartindent
set wildmenu

set expandtab
set history=1000
set incsearch
set hlsearch
set nocompatible
set mouse=a
set number

set backspace=indent,eol,start



" by default, the indent is 4 spaces.
set expandtab
set shiftwidth=4
set softtabstop=4
set tabstop=4

" for html/rb files, 2 spaces
autocmd Filetype html setlocal ts=2 sw=2 expandtab
autocmd Filetype ruby setlocal ts=2 sw=2 expandtab

" for js/coffee/jade files, 2 spaces
autocmd Filetype javascript setlocal ts=2 sw=2 sts=0 expandtab
autocmd Filetype typescript setlocal ts=2 sw=2 sts=0 expandtab
autocmd Filetype coffeescript setlocal ts=2 sw=2 sts=0 expandtab
autocmd Filetype jade setlocal ts=2 sw=2 sts=0 expandtab

" bash script use 2 spaces as well
autocmd Filetype sh setlocal ts=2 sw=2 sts=0 expandtab

"colo koehler
"colo darkblue
colo slate

au BufNewFile,BufRead *.cpp set syntax=cpp11
au BufNewFile,BufRead *.pde set syntax=java
au BufNewFile,BufRead *.jxs set filetype=xml
au BufNewFile,BufRead *.ino set syntax=cpp
au BufNewFile,BufRead *.frag,*.vert,*.fp,*.vp,*.glsl setf glsl
au BufNewFile,BufRead *.glsl,*.frag,*.vert set syntax=glsl

" color line on 120th column
filetype plugin indent on
:set colorcolumn=120
" :set colorcolumn=80

" highlight text after 120th column
"highlight OverLength ctermbg=red ctermfg=white guibg=#592929
"match OverLength /\%121v.\+/

" ESLint preferences - on save
" let g:ale_lint_on_save = 1
" let g:ale_lint_on_text_changed = 0






" always starts NERDTree
" autocmd vimenter * NERDTree

" starts NERDTree if no file specified
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif



"hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
"hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
nnoremap <Leader>c :set cursorline! cursorcolumn!<CR>
" set cursorline
" set cursorcolumn

